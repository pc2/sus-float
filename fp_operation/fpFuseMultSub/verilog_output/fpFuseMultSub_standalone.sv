// DO NOT EDIT THIS FILE
// This file was generated with SUS Compiler 0.2.0-devel
// ::fpFuseMultSub #()
module fpFuseMultSub___(
	input aclk,
	input wire [31:0] value1,
	input wire [31:0] value2,
	input wire [31:0] value3,
	output /*mux_wire*/ logic [31:0] result
);

/*mux_wire*/ logic [31:0] fpms_s_axis_a_tdata;
/*mux_wire*/ logic [31:0] fpms_s_axis_b_tdata;
/*mux_wire*/ logic [31:0] fpms_s_axis_c_tdata;
wire [31:0] fpms_m_axis_result_tdata;
floating_point_0 #() fpms(
	.aclk(aclk),
	.s_axis_a_tdata(fpms_s_axis_a_tdata),
	.s_axis_b_tdata(fpms_s_axis_b_tdata),
	.s_axis_c_tdata(fpms_s_axis_c_tdata),
	.m_axis_result_tdata(fpms_m_axis_result_tdata)
);
always_comb begin
	// Combinatorial wires are not defined when not valid. This is just so that the synthesis tool doesn't generate latches
	result[0] = 'x;
	result[1] = 'x;
	result[2] = 'x;
	result[3] = 'x;
	result[4] = 'x;
	result[5] = 'x;
	result[6] = 'x;
	result[7] = 'x;
	result[8] = 'x;
	result[9] = 'x;
	result[10] = 'x;
	result[11] = 'x;
	result[12] = 'x;
	result[13] = 'x;
	result[14] = 'x;
	result[15] = 'x;
	result[16] = 'x;
	result[17] = 'x;
	result[18] = 'x;
	result[19] = 'x;
	result[20] = 'x;
	result[21] = 'x;
	result[22] = 'x;
	result[23] = 'x;
	result[24] = 'x;
	result[25] = 'x;
	result[26] = 'x;
	result[27] = 'x;
	result[28] = 'x;
	result[29] = 'x;
	result[30] = 'x;
	result[31] = 'x;
	result = fpms_m_axis_result_tdata;
end
always_comb begin
	// Combinatorial wires are not defined when not valid. This is just so that the synthesis tool doesn't generate latches
	fpms_s_axis_a_tdata[0] = 'x;
	fpms_s_axis_a_tdata[1] = 'x;
	fpms_s_axis_a_tdata[2] = 'x;
	fpms_s_axis_a_tdata[3] = 'x;
	fpms_s_axis_a_tdata[4] = 'x;
	fpms_s_axis_a_tdata[5] = 'x;
	fpms_s_axis_a_tdata[6] = 'x;
	fpms_s_axis_a_tdata[7] = 'x;
	fpms_s_axis_a_tdata[8] = 'x;
	fpms_s_axis_a_tdata[9] = 'x;
	fpms_s_axis_a_tdata[10] = 'x;
	fpms_s_axis_a_tdata[11] = 'x;
	fpms_s_axis_a_tdata[12] = 'x;
	fpms_s_axis_a_tdata[13] = 'x;
	fpms_s_axis_a_tdata[14] = 'x;
	fpms_s_axis_a_tdata[15] = 'x;
	fpms_s_axis_a_tdata[16] = 'x;
	fpms_s_axis_a_tdata[17] = 'x;
	fpms_s_axis_a_tdata[18] = 'x;
	fpms_s_axis_a_tdata[19] = 'x;
	fpms_s_axis_a_tdata[20] = 'x;
	fpms_s_axis_a_tdata[21] = 'x;
	fpms_s_axis_a_tdata[22] = 'x;
	fpms_s_axis_a_tdata[23] = 'x;
	fpms_s_axis_a_tdata[24] = 'x;
	fpms_s_axis_a_tdata[25] = 'x;
	fpms_s_axis_a_tdata[26] = 'x;
	fpms_s_axis_a_tdata[27] = 'x;
	fpms_s_axis_a_tdata[28] = 'x;
	fpms_s_axis_a_tdata[29] = 'x;
	fpms_s_axis_a_tdata[30] = 'x;
	fpms_s_axis_a_tdata[31] = 'x;
	fpms_s_axis_a_tdata = value1;
end
always_comb begin
	// Combinatorial wires are not defined when not valid. This is just so that the synthesis tool doesn't generate latches
	fpms_s_axis_b_tdata[0] = 'x;
	fpms_s_axis_b_tdata[1] = 'x;
	fpms_s_axis_b_tdata[2] = 'x;
	fpms_s_axis_b_tdata[3] = 'x;
	fpms_s_axis_b_tdata[4] = 'x;
	fpms_s_axis_b_tdata[5] = 'x;
	fpms_s_axis_b_tdata[6] = 'x;
	fpms_s_axis_b_tdata[7] = 'x;
	fpms_s_axis_b_tdata[8] = 'x;
	fpms_s_axis_b_tdata[9] = 'x;
	fpms_s_axis_b_tdata[10] = 'x;
	fpms_s_axis_b_tdata[11] = 'x;
	fpms_s_axis_b_tdata[12] = 'x;
	fpms_s_axis_b_tdata[13] = 'x;
	fpms_s_axis_b_tdata[14] = 'x;
	fpms_s_axis_b_tdata[15] = 'x;
	fpms_s_axis_b_tdata[16] = 'x;
	fpms_s_axis_b_tdata[17] = 'x;
	fpms_s_axis_b_tdata[18] = 'x;
	fpms_s_axis_b_tdata[19] = 'x;
	fpms_s_axis_b_tdata[20] = 'x;
	fpms_s_axis_b_tdata[21] = 'x;
	fpms_s_axis_b_tdata[22] = 'x;
	fpms_s_axis_b_tdata[23] = 'x;
	fpms_s_axis_b_tdata[24] = 'x;
	fpms_s_axis_b_tdata[25] = 'x;
	fpms_s_axis_b_tdata[26] = 'x;
	fpms_s_axis_b_tdata[27] = 'x;
	fpms_s_axis_b_tdata[28] = 'x;
	fpms_s_axis_b_tdata[29] = 'x;
	fpms_s_axis_b_tdata[30] = 'x;
	fpms_s_axis_b_tdata[31] = 'x;
	fpms_s_axis_b_tdata = value2;
end
always_comb begin
	// Combinatorial wires are not defined when not valid. This is just so that the synthesis tool doesn't generate latches
	fpms_s_axis_c_tdata[0] = 'x;
	fpms_s_axis_c_tdata[1] = 'x;
	fpms_s_axis_c_tdata[2] = 'x;
	fpms_s_axis_c_tdata[3] = 'x;
	fpms_s_axis_c_tdata[4] = 'x;
	fpms_s_axis_c_tdata[5] = 'x;
	fpms_s_axis_c_tdata[6] = 'x;
	fpms_s_axis_c_tdata[7] = 'x;
	fpms_s_axis_c_tdata[8] = 'x;
	fpms_s_axis_c_tdata[9] = 'x;
	fpms_s_axis_c_tdata[10] = 'x;
	fpms_s_axis_c_tdata[11] = 'x;
	fpms_s_axis_c_tdata[12] = 'x;
	fpms_s_axis_c_tdata[13] = 'x;
	fpms_s_axis_c_tdata[14] = 'x;
	fpms_s_axis_c_tdata[15] = 'x;
	fpms_s_axis_c_tdata[16] = 'x;
	fpms_s_axis_c_tdata[17] = 'x;
	fpms_s_axis_c_tdata[18] = 'x;
	fpms_s_axis_c_tdata[19] = 'x;
	fpms_s_axis_c_tdata[20] = 'x;
	fpms_s_axis_c_tdata[21] = 'x;
	fpms_s_axis_c_tdata[22] = 'x;
	fpms_s_axis_c_tdata[23] = 'x;
	fpms_s_axis_c_tdata[24] = 'x;
	fpms_s_axis_c_tdata[25] = 'x;
	fpms_s_axis_c_tdata[26] = 'x;
	fpms_s_axis_c_tdata[27] = 'x;
	fpms_s_axis_c_tdata[28] = 'x;
	fpms_s_axis_c_tdata[29] = 'x;
	fpms_s_axis_c_tdata[30] = 'x;
	fpms_s_axis_c_tdata[31] = 'x;
	fpms_s_axis_c_tdata = value3;
end
endmodule

// ::floating_point_0 #()
// Provided externally
// module floating_point_0___(
// 	input aclk,
// 	input wire [31:0] s_axis_a_tdata,
// 	input wire [31:0] s_axis_b_tdata,
// 	input wire [31:0] s_axis_c_tdata,
// 	output /*mux_wire*/ logic [31:0] m_axis_result_tdata
// );
// 
// 
