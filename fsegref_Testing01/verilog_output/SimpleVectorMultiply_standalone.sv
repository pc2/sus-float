// DO NOT EDIT THIS FILE
// This file was generated with SUS Compiler 0.1.1// ::SimpleVectorMultiply
module SimpleVectorMultiply(
	input clk,
	input wire [31:0] A1,
	input wire [31:0] A2,
	input wire [31:0] B1,
	input wire [31:0] B2,
	output /*mux_wire*/ logic [31:0] Result11,
	output /*mux_wire*/ logic [31:0] Result12,
	output /*mux_wire*/ logic [31:0] Result21,
	output /*mux_wire*/ logic [31:0] Result22
);

wire [31:0] _1 = A1 * B1;
wire [31:0] _2 = A1 * B2;
wire [31:0] _3 = A2 * B1;
wire [31:0] _4 = A2 * B2;
always_comb begin
	// Combinatorial wires are not defined when not valid. This is just so that the synthesys tool doesn't generate latches
	Result11 = 'x;
	Result11 = _1;
end
always_comb begin
	// Combinatorial wires are not defined when not valid. This is just so that the synthesys tool doesn't generate latches
	Result12 = 'x;
	Result12 = _2;
end
always_comb begin
	// Combinatorial wires are not defined when not valid. This is just so that the synthesys tool doesn't generate latches
	Result21 = 'x;
	Result21 = _3;
end
always_comb begin
	// Combinatorial wires are not defined when not valid. This is just so that the synthesys tool doesn't generate latches
	Result22 = 'x;
	Result22 = _4;
end
endmodule

